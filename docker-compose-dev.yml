version: "3.9"
networks:
<<<<<<< HEAD
  docker-network:
    driver: bridge
  net-tecnomex:
=======
  # docker-network:
  #   driver: bridge
  npm-nw:
>>>>>>> f7e486c36938a5bb7dea1c1505c5b4e0f8b0c364
    external: true
services:
  my-blog-app:
    container_name: my-blog-app
    build:
      context: ./my-blog-app
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./my-blog-app:/app
    # links:
    #   - backend-blog
    networks:
<<<<<<< HEAD
      - net-tecnomex
      - docker-network
  backend-blog:
    container_name: backend-blog
    build:
      context: ./backend-blog
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./backend-blog:/app
    networks:
      - net-tecnomex
      - docker-network
    links:
      - postgres
  postgres:
    image: postgres:14.0
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    networks:
      - docker-network
    volumes:
      - /var/lib/docker/volumes/temporal_db/_data:/var/lib/postgresql/data
=======
      - npm-nw
      # - docker-network
#   backend-blog:
#     container_name: backend-blog
#     build:
#       context: ./backend-blog
#       dockerfile: Dockerfile.dev
#     ports:
#       - "4000:4000"
#     volumes:
#       - ./backend-blog:/app
#     networks:
#       - npm-nw
#       - docker-network
#     links:
#       - postgres
#   postgres:
#     image: postgres:14.0
#     ports:
#       - "5432:5432"
#     environment:
#       - POSTGRES_USER=${DB_USERNAME}
#       - POSTGRES_PASSWORD=${DB_PASSWORD}
#       - POSTGRES_DB=${DB_DATABASE}
#     networks:
#       - docker-network
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
>>>>>>> f7e486c36938a5bb7dea1c1505c5b4e0f8b0c364

  # pgadmin:
  #   image: dpage/pgadmin4
  #   ports:
  #     - "80:80"
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PG_USERNAME}
  #     - PGADMIN_DEFAULT_PASSWORD=${PG_PASSWORD}
  #   networks:
  #     - docker-network

volumes:
  postgres-data:
